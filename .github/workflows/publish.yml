name: Publish

on:
  workflow_run:
    workflows: ["Automated Tests"]
    types:
      - completed
    branches:
      - main

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"

permissions:
  contents: write
  checks: read
  issues: read
  packages: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      package-matrix: ${{ steps.create-matrix.outputs.matrix }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Get Changed Packages
        id: get-changed-packages
        run: |
          mkdir -p dist
          npx changeset status --output dist/changeset.json
          echo "changedPackages=$(jq -r '(.releases | map("--suffix-package=" + .name) | join(" "))' dist/changeset.json)" >> $GITHUB_OUTPUT
          rm -f dist/changeset.json

      - name: Get Suffix
        id: get-suffix
        run: echo "suffix=$(echo '${{ github.sha }}' | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Create Release Pull Request
        uses: changesets/action@v1
        id: changesets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Packages # Use the commit hash as the suffix
        run: npm run build -- --suffix=${{ steps.get-suffix.outputs.suffix }} ${{ steps.get-changed-packages.outputs.changedPackages }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

      - name: Get Package Matrix
        id: create-matrix
        run: |
          echo "matrix=$(ls dist | jq -c -R -s 'split("\n") | map(select(. != "")) | {package: map(.)}')" >> $GITHUB_OUTPUT

  publish:
    name: Publish @std-types/${{ matrix.package }}
    runs-on: ubuntu-latest
    needs: build

    strategy:
      matrix: ${{ fromJson(needs.build.outputs.package-matrix) }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org

      - name: Download
        uses: actions/download-artifact@v4
        with:
          name: dist

      - name: Publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: |
          cd "${{ matrix.package }}"
          if ! [ -f "package.json" ]; then
            exit 0
          fi

          TAG="latest"
          if [ "true" == "$(jq -r '.version | test("^\\d+\\.\\d+\\.\\d+-.+$")' package.json)" ]; then
            TAG="canary"
          fi

          PACKAGE_NAME="$(jq -r '.name' package.json)"
          PACKAGE_VERSION="$(jq -r '.version' package.json)"
          echo "Publishing ${PACKAGE_NAME}@${PACKAGE_VERSION} with tag $TAG"
          npm info "${PACKAGE_NAME}@${PACKAGE_VERSION}" || npm publish --tag "$TAG" --access public
